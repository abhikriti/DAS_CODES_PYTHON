// Subtree count - Intuit OA

#include<bits/stdc++.h>
using namespace std;

vector<int> subtreeCount(vector<int> &array,int n)
{
    vector<int>answer(n);
    map<int,int>start,last;

    for(int i=0;i<array.size();i++)
    {
        int index = array[i];
        index--;
        if(start.count(index) == 0)
        {
            start[index] = i;
        }
        else{
            last[index] = i;
        }
    }
    for(int i = 0;i<n;i++)
    {
        answer[i] = (last[i]-start[i])/2;
        answer[i]++;
    }
    return answer;
}
    
int main() {
    #ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#endif
    
    vector<int>arr= {1,2,5,5,6,6,7,7,2,3,3,4,4,1};
    int no = 7;
    int n;
    cin>>n;

    vector<int> vec;
    for(int i=0;i<n;i++){
        int t;
        cin>>t;

        vec.push_back(t);
    }

    vector<int>res = subtreeCount(arr, no);

    for(int i=0;i<n;i++)
    {
        cout<<res[i]<<" ";
    }
    return 0;
}
